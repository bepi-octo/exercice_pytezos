{ parameter (or (pair %boiteNoire nat nat) (nat %modifierLimite)) ;
  storage
    (pair (pair (address %administrateur) (big_map %cache (pair nat nat) (list nat)))
          (pair (nat %compteur) (nat %limite))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             CAR ;
             PUSH mutez 200 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { DROP 3 ;
                  PUSH string "Il faut payer 200 mutez pour lancer le calcul" ;
                  FAILWITH }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH string "Adresse non_joignable" ; FAILWITH } {} ;
                  PUSH mutez 200 ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  GET ;
                  IF_NONE
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      NIL nat ;
                      DIG 3 ;
                      CONS ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      COMPARE ;
                      GT ;
                      IF { DIG 3 ; DUP ; DUG 4 ; CDR ; CDR } { DIG 2 ; DUP ; DUG 3 ; CDR } ;
                      PUSH nat 0 ;
                      PAIR ;
                      PAIR ;
                      LEFT (pair (pair nat nat) (pair (list nat) nat)) ;
                      LOOP_LEFT
                        { DUP ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CDR ;
                          CAR ;
                          DIG 3 ;
                          CAR ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          COMPARE ;
                          GT ;
                          IF { DIG 3 ;
                               DIG 2 ;
                               PAIR ;
                               DUG 2 ;
                               PAIR ;
                               PAIR ;
                               RIGHT (pair (pair nat nat) (pair (list nat) nat)) }
                             { PUSH nat 0 ;
                               PUSH nat 2 ;
                               DIG 5 ;
                               DUP ;
                               DUG 6 ;
                               EDIV ;
                               IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                               CDR ;
                               COMPARE ;
                               EQ ;
                               IF { PUSH nat 2 ;
                                    DIG 4 ;
                                    EDIV ;
                                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                    CAR ;
                                    DUP ;
                                    DIG 3 ;
                                    DIG 2 ;
                                    CONS ;
                                    PAIR ;
                                    DIG 2 ;
                                    PUSH nat 1 ;
                                    DIG 3 ;
                                    ADD ;
                                    PAIR ;
                                    PAIR ;
                                    LEFT (pair (pair nat nat) (pair (list nat) nat)) }
                                  { PUSH nat 1 ;
                                    PUSH nat 3 ;
                                    DIG 5 ;
                                    MUL ;
                                    ADD ;
                                    DUP ;
                                    DIG 3 ;
                                    DIG 2 ;
                                    CONS ;
                                    PAIR ;
                                    DIG 2 ;
                                    PUSH nat 1 ;
                                    DIG 3 ;
                                    ADD ;
                                    PAIR ;
                                    PAIR ;
                                    LEFT (pair (pair nat nat) (pair (list nat) nat)) } } } ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      PUSH nat 1 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      DIG 5 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      CDR ;
                      CAR ;
                      DIG 5 ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      NIL operation ;
                      DIG 2 ;
                      CONS ;
                      PAIR }
                    { DROP 4 ;
                      DUP ;
                      CDR ;
                      CDR ;
                      PUSH nat 1 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      NIL operation ;
                      PAIR } } }
           { PAIR ;
             DUP ;
             CDR ;
             DUP ;
             SENDER ;
             PAIR ;
             DUP ;
             CDR ;
             CAR ;
             CAR ;
             SWAP ;
             CAR ;
             COMPARE ;
             EQ ;
             NOT ;
             IF { DROP 2 ;
                  PUSH string "Seul l'administrateur peut modifier la limite" ;
                  FAILWITH }
                { SWAP ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  NIL operation ;
                  PAIR } } } }

